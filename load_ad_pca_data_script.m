% *************************************************************************
% Loads data for AD patients and for PCA patients
% *************************************************************************
file_folder = 'C:\Users\Sam\OneDrive\C-PLACID\Eye Tracking Data\';
% AD patients
ad_file_names = {'baria.asc'; 'bigba.asc'; 'bunda.asc'; 'golro.asc';...
    'harja.asc'; 'hayma.asc'; 'jammi.asc'; 'keeke.asc'; 'kinne.asc';...
    'lewhe.asc'; 'macma.asc'; 'medst.asc'; 'newsi.asc'; 'pagje.asc';...
    'redel.asc'; 'selro.asc'; 'shake.asc'; 'sheca.asc'; 'shejo.asc';...
    'stewe.asc'; 'thoan.asc'; 'towro.asc'; 'warma.asc'; 'wilfa.asc'};
n_ad_patients = length(ad_file_names);
apostrophe = char(39);
[eye_tracking_data_ad, target_data_ad] = loadManyFiles(file_folder,...
    ad_file_names);
fprintf(['Transforming AD patients', apostrophe, ' data for HMM...\n'])
[y_ad, zero_prob_ad, u_ad] =...
    hmmDataManyPeople(eye_tracking_data_ad, target_data_ad, l_dirs,...
    orth_l_dirs);
epsilon = 0.001;
fprintf(['Calculating AD patients', apostrophe,...
    ' conditional densities p(u | x)...\n'])
p_ugx_ad = condProbUX_ManyPeople(u_ad, l_dirs, epsilon);
fprintf(['Obtaining AD patients', apostrophe,...
    ' data for experiment 1 only...\n'])
n_practice = 2;
n_experiments = 12;
ad_exp_1_idx = 1 + arrayfun(@(exp_idx)...
    2 * (length(y_ad{exp_idx}) == (n_practice + n_experiments)),...
    1:n_ad_patients);
y_ad_exp1 = arrayfun(@(person_idx) y_ad{person_idx}{ad_exp_1_idx(person_idx)},...
    (1:n_ad_patients)', 'UniformOutput', false);
zero_prob_ad_exp1 = arrayfun(@(person_idx)...
    zero_prob_ad{person_idx}{ad_exp_1_idx(person_idx)}, (1:n_ad_patients)',...
    'UniformOutput', false);
p_ugx_ad_exp1 = arrayfun(@(person_idx)...
    p_ugx_ad{person_idx}{ad_exp_1_idx(person_idx)}, (1:n_ad_patients)',...
    'UniformOutput', false);
% PCA patients
% % pca_file_names = {'conpa.asc'; 'engsa.asc'; 'frara.asc'; 'jarth.asc';...
% %     'mcsgu.asc'; 'morpe.asc'; 'staph.asc'};
pca_file_names = {'conpa.asc'; 'engsa.asc'; 'frara.asc'; 'jarth.asc';...
    'morpe.asc'; 'staph.asc'};
n_pca_patients = length(pca_file_names);
[eye_tracking_data_pca, target_data_pca] = loadManyFiles(file_folder,...
    pca_file_names);
fprintf(['Transforming PCA patients', apostrophe, ' data for HMM...\n'])
[y_pca, zero_prob_pca, u_pca] =...
    hmmDataManyPeople(eye_tracking_data_pca, target_data_pca, l_dirs,...
    orth_l_dirs);
fprintf(['Calculating PCA patients', apostrophe,...
    ' conditional densities p(u | x)...\n'])
p_ugx_pca = condProbUX_ManyPeople(u_pca, l_dirs, epsilon);
fprintf(['Obtaining PCA patients', apostrophe,...
    ' data for experiment 1 only...\n'])
pca_exp_1_idx = 1 + arrayfun(@(exp_idx)...
    2 * (length(y_pca{exp_idx}) == (n_practice + n_experiments)),...
    1:n_pca_patients);
y_pca_exp1 = arrayfun(@(person_idx) y_pca{person_idx}{pca_exp_1_idx(person_idx)},...
    (1:n_pca_patients)', 'UniformOutput', false);
zero_prob_pca_exp1 = arrayfun(@(person_idx)...
    zero_prob_pca{person_idx}{pca_exp_1_idx(person_idx)}, (1:n_pca_patients)',...
    'UniformOutput', false);
p_ugx_pca_exp1 = arrayfun(@(person_idx)...
    p_ugx_pca{person_idx}{pca_exp_1_idx(person_idx)}, (1:n_pca_patients)',...
    'UniformOutput', false);
